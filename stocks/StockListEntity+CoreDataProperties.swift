//
//  StockListEntity+CoreDataProperties.swift
//  stocks
//
//  Created by Devon Chan on 2024-08-13.
//
//

import Foundation
import CoreData

// Extension to StockListEntity that contains its Core Data properties and additional functionality
// File generated by xcode when creating the Core Data model 
extension StockListEntity {

    // Generates a fetch request to retrieve StockEntity objects from Core Data.
    @nonobjc public class func fetchRequest() -> NSFetchRequest<StockListEntity> {
        return NSFetchRequest<StockListEntity>(entityName: "StockListEntity")
    }

    @NSManaged public var listType: String?
    @NSManaged public var stocks: NSOrderedSet?

}

// MARK: Generated accessors for stocks
extension StockListEntity {

    @objc(insertObject:inStocksAtIndex:)
    @NSManaged public func insertIntoStocks(_ value: StockEntity, at idx: Int)

    @objc(removeObjectFromStocksAtIndex:)
    @NSManaged public func removeFromStocks(at idx: Int)

    @objc(insertStocks:atIndexes:)
    @NSManaged public func insertIntoStocks(_ values: [StockEntity], at indexes: NSIndexSet)

    @objc(removeStocksAtIndexes:)
    @NSManaged public func removeFromStocks(at indexes: NSIndexSet)

    @objc(replaceObjectInStocksAtIndex:withObject:)
    @NSManaged public func replaceStocks(at idx: Int, with value: StockEntity)

    @objc(replaceStocksAtIndexes:withStocks:)
    @NSManaged public func replaceStocks(at indexes: NSIndexSet, with values: [StockEntity])

    @objc(addStocksObject:)
    @NSManaged public func addToStocks(_ value: StockEntity)

    @objc(removeStocksObject:)
    @NSManaged public func removeFromStocks(_ value: StockEntity)

    @objc(addStocks:)
    @NSManaged public func addToStocks(_ values: NSOrderedSet)

    @objc(removeStocks:)
    @NSManaged public func removeFromStocks(_ values: NSOrderedSet)

}

// Extension that makes StockListEntity conform to the Identifiable protocol.
// This is useful for SwiftUI views that require unique identifiers for lists.
extension StockListEntity : Identifiable {

}
